(()=>{var e={10:e=>{const t=function(e,t,i=!0){this.defaultFunction="test",this.activeKeysTime=Date.now(),this.exclusiveMapping=i,this.keymap_init(),this.keymap_assign(e),this.keymap_assign(t),this.listen()};(t.prototype={}).constructor=t,t.prototype.activeKeys={},t.prototype.numberOfActiveKeys=function(){return Object.keys(this.activeKeys).length},t.prototype.default=function(e,t,i){},t.prototype.keymap_init=function(){Object.keys(this.keymap).forEach((e=>{this.keymap[e]=this.default}),this),Object.keys(this.ranges).forEach((e=>{this.keyranges[e]={},this.ranges[e].forEach((t=>{this.keyranges[e][t.toString()]=void 0}),this)}),this)},t.prototype.keymap_assign=function(e){Object.assign(this.keymap,e)},t.prototype.keyranges_assign=function(e){Object.assign(this.keyranges,e)},t.prototype.listen=function(e=document){e.addEventListener("keydown",this,!1),e.addEventListener("keyup",this,!1),console.log("keyboard map on")},t.prototype.unlisten=function(e=document){e.removeEventListener("keydown",this),e.removeEventListener("keyup",this),console.log("keyboard map off")},t.prototype.handleEvent=function(e){this.process(e)},t.prototype.keymap={Key:{},Arrow:{},Digit:{},F:{},Meta:{},Alt:{},Shift:{},Control:{},Backspace:{},Delete:{},Tab:{},Space:{},Minus:{},Equal:{},Semicolon:{},Quote:{},Comma:{},Period:{},Slash:{},Backslash:{},Backquote:{},BracketLeft:{},BracketRight:{}},t.prototype.keyranges={},t.prototype.ranges={Key:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],Arrow:["Left","Right","Up","Down"],Digit:[0,1,2,3,4,5,6,7,8,9],F:[1,2,3,4,5,6,7,8,9,10,11,12],Meta:["Left","Right"],Alt:["Left","Right"],Shift:["Left","Right"],Control:["Left","Right"]},t.prototype.process=function(e){let t=Object.keys(this.keymap).find((t=>e.code.includes(t))),i=e.code.replace(t,""),s="keydown"==e.type;s&&!e.repeat?(0==Object.keys(this.activeKeys).length&&(this.activeKeysTime=Date.now()),this.activeKeys[e.code]=Date.now()-this.activeKeysTime):s||delete this.activeKeys[e.code],""==i?this.keymap[t](e,s):"function"==typeof this.keyranges[t][i]?(console.log("item inside if:",i),this.keyranges[t][i](e,i,s),this.exclusiveMapping||this.keymap[t](e,i,s)):this.keymap[t](e,i,s)},e.exports=t}},t={};function i(s){var o=t[s];if(void 0!==o)return o.exports;var n=t[s]={exports:{}};return e[s](n,n.exports,i),n.exports}(()=>{const e=i(10);window.keyboardMapper=new e({},{},!1)})()})();